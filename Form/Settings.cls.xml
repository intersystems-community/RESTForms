<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2017.2 (Build 543U)" ts="2017-05-12 19:48:26">
<Class name="Form.Settings">
<Description>
Get and set settings</Description>
<Abstract>1</Abstract>
<IncludeCode>Form</IncludeCode>
<TimeChanged>64415,69633</TimeChanged>
<TimeCreated>64110,52980.392815</TimeCreated>

<Method name="getSetting">
<Description><![CDATA[
Get setting value by name (name is always lowercase)
Possible settings:
queryclass - class for SQL queries. See Form.REST.Objects for implementation details
fileDir - directory for files. Defaults to MGR\DB directory
<programlisting language="COS">w {}.$toJSON()</programlisting>]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec>name:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[$get($$$settingsGlobal($zcvt(name, "l")))
]]></Implementation>
</Method>

<Method name="setSetting">
<Description>
Set setting "name" value</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>name:%String="",value:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#dim sc As %Status = $$$OK
	
	if name = "queryclass" {
		if '##class(%Dictionary.ClassDefinition).%ExistsId(value) {
			set sc = $$$ERROR($$$GeneralError, "Class '" _value _ "' does not exis")
		}
	} elseif name = "fileDir" {
		// TODO add valid&writable checks
		set value = ##class(%File).NormalizeDirectory(value)
	} elseif name = "timezone" {
		set value = $zcvt(value, "l")
		if ((value'="utc") && (value'="ignore")) {
			set sc = $$$ERROR($$$GeneralError, "Value '" _value _ "' is not a valid timezone setting. Valid values are: ignore, utc")
		}
	} else {
		set sc = $$$ERROR($$$GeneralError, "Setting '" _ name _ "' does not exist")
	}
	
	set:$$$ISOK(sc) $$$settingsGlobal($zcvt(name, "l")) = value
	return sc
]]></Implementation>
</Method>
</Class>
</Export>
